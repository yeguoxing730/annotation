1.spring-aop
这个jar 文件包含在应用中使用Spring 的AOP 特性时所需的类和源码级元数据支持。
使用基于AOP 的Spring特性，如声明型事务管理（Declarative Transaction Management），也要在应用里包含这个jar包。
外部依赖spring-core， (spring-beans，AOP Alliance， CGLIB，Commons Attributes)。

关于org.springframework.asm

Spring独立的asm程序, Spring2.5.6的时候需要asmJar包，3.0开始提供他自己独立的asmJar。


2.spring-aspects.jar
提供对AspectJ的支持，以便可以方便的将面向方面的功能集成进IDE中，比如Eclipse AJDT。

外部依赖。

3.spring-beans.jar
这个jar 文件是所有应用都要用到的，它包含访问配置文件、创建和管理bean 以及进行Inversion ofControl / Dependency Injection（IoC/DI）操作相关的所有类。如果应用只需基本的IoC/DI 支持，引入spring-core.jar 及spring-beans.jar 文件就可以了。
外部依赖spring-core，(CGLIB)。


4.spring-context.jar
这个jar 文件为Spring 核心提供了大量扩展。可以找到使用Spring ApplicationContext特性时所需的全部类，JDNI 所需的全部类，instrumentation组件以及校验Validation 方面的相关类。
外部依赖spring-beans, (spring-aop)。

 5.spring-context-support
包含支持缓存Cache（ehcache）、JCA、JMX、 邮件服务（Java Mail、COS Mail）、任务计划Scheduling（Timer、Quartz）方面的类。
以前的版本中应该是这个：spring-support.jar这个jar 文件包含支持UI模版（Velocity，FreeMarker，JasperReports），邮件服务，脚本服务(JRuby)，缓存Cache（EHCache），任务计划Scheduling（uartz）方面的类。
外部依赖spring-context, (spring-jdbc, Velocity, FreeMarker, JasperReports, BSH, Groovy,JRuby, Quartz, EHCache)

6.spring-core.jar
这个jar 文件包含Spring 框架基本的核心工具类。Spring 其它组件要都要使用到这个包里的类，是其它组件的基本核心，当然你也可以在自己的应用系统中使用这些工具类。
外部依赖Commons Logging， (Log4J)。

关于spring-dao.jar（3.x版本里，没有发现这个包）
这个jar 文件包含Spring DAO、Spring Transaction 进行数据访问的所有类。为了使用声明型事务支持，还需在自己的应用里包含spring-aop.jar。
外部依赖spring-core，(spring-aop， spring-context， JTA API)。


7.spring-expression
Spring表达式语言。

8.spring-instrument
Spring3.0对服务器的代理接口。

9. spring-instrument-tomcat
Spring3.0对Tomcat的连接池的集成。


10.spring-jdbc.jar
这个jar 文件包含对Spring 对JDBC 数据访问进行封装的所有类。

外部依赖spring-beans，spring-dao。

11.spring-jms.jar
这个jar包提供了对JMS 1.0.2/1.1的支持类。

外部依赖spring-beans，spring-dao，JMS API。


此外，还有下面这些以spring-j*开头的包，本人还没用过。
spring-jmx.jar
这个jar包提供了对JMX 1.0/1.2的支持类。外部依赖spring-beans，spring-aop， JMX API。
spring-jca.jar
对JCA 1.0的支持。外部依赖spring-beans，spring-dao， JCA API。
spring-jdo.jar
对JDO 1.0/2.0的支持。外部依赖spring-jdbc， JDO API， (spring-web)。
spring-jpa.jar
对JPA 1.0的支持。外部依赖spring-jdbc， JPA API， (spring-web)。

12.spring-messaging

13. spring-orm
包含Spring对DAO特性集进行了扩展，使其支持iBATIS、JDO、OJB、TopLink，  因为Hibernate已经独立成包了，现在不包含在这个包里了。这个jar文件里大部分的类都要依赖spring-dao.jar里的类，用这个包时你需要同时包含spring-dao.jar包。


14. spring-oxm
Spring 对Object/XMl的映射支持,可以让Java与XML之间来回切换。


关于spring-remoting.jar
这个jar 文件包含支持EJB、远程调用Remoting（RMI、Hessian、Burlap、Http Invoker、JAX-RPC）方面的类。
外部依赖spring-aop， (spring-context，spring-web，Hessian，Burlap，JAX-RPC，EJB API)。


15.spring-test
对Junit等测试框架的简单封装。

16.spring-tx
以前是在这里org.springframework.transaction
为JDBC、Hibernate、JDO、JPA、Beans等提供的一致的声明式和编程式事务管理支持。

17.spring-web.jar
这个jar 文件包含Web 应用开发时，用到Spring 框架时所需的核心类，包括自动载入Web ApplicationContext 特性的类、Struts 与JSF 集成类、文件上传的支持类、Filter 类和大量工具辅助类。
外部依赖spring-context, Servlet API, (JSP API, JSTL, Commons FileUpload, COS)。


org.springframework.web.portlet
SpringMVC的增强。
org.springframework.web.servlet
对J2EE6.0的Servlet3.0的支持。

org.springframework.web.struts
Struts框架支持，可以更方便更容易的集成Struts框架。


18.spring-webmvc.jar
这个jar 文件包含Spring MVC 框架相关的所有类。包括框架的Servlets，Web MVC框架，控制器和视图支持。当然，如果你的应用使用了独立的MVC 框架，则无需这个JAR 文件里的任何类。
外部依赖spring-web, (spring-support，Tiles，iText，POI)。


19.spring-webmvc-protlet
20.spring-websocket

Spring与其他框架整合的jar包
spring-hibernate2.jar
对Hibernate 2.1的支持，已经不建议使用。外部依赖spring-jdbc，Hibernate2，(spring-web)。

spring-hibernate3.jar

对Hibernate 3.0/3.1/3.2的支持。外部依赖spring-jdbc，Hibernate3，(spring-web)。

目前的Spring对Hibernate的支持比较好，直接用spring-orm包即可，一般不用单独添加spring-hibernate包。


spring-toplink.jar
对TopLink框架的支持。外部依赖spring-jdbc，TopLink。


spring-ibatis.jar
对iBATIS SQL Maps的支持。外部依赖spring-jdbc，iBATIS SQL Maps。



另外的两个包。

spring-mock.jar
这个jar 文件包含Spring 一整套mock 类来辅助应用的测试。Spring 测试套件使用了其中大量mock 类，这样测试就更加简单。模拟HttpServletRequest 和HttpServletResponse 类在Web 应用单元测试是很方便的。并且提供了对JUnit的支持。
外部依赖spring-core。


WEAVER JARS (dist/weavers)说明。



spring-agent.jar

Spring的InstrumentationSavingAgent (为InstrumentationLoadTimeWeaver)，一个设备代理包，可以参考JDK1.5的Instrumentation功能获得更多信息。
外部依赖none (for use at JVM startup: "-javaagent:spring-agent.jar")。



spring-tomcat-weaver.jar

扩展Tomcat的ClassLoader，使其可以使用instrumentation（设备）类。

外部依赖none (for deployment into Tomcat's "server/lib" directory)。



如果需要使用JSP语言作为Spring's web MVC tags的参数，则需要JSP 2.0的支持。或者选择Jakarta的JSTL (standard.jar)。
如何选择这些发布包，决定选用哪些发布包其实相当简单。
如果你正在构建Web 应用并将全程使用Spring，那么最好就使用单个全部的spring.jar 文件；
如果你的应用仅仅用到简单的Inversion ofControl / Dependency Injection（IoC/DI）容器，那么只需spring-core.jar与spring-beans.jar 即可；
如果你对发布的大小要求很高，那么就得精挑细选了，只取包含自己所需特性的jar 文件了。
采用独立的发布包你可以避免包含自己的应用不需要的全部类。当然你可以采用其它的一些工具来设法令整个应用包变小，节省空间的重点在于准确地找出自己所需的Spring 依赖类，然后合并所需的类与包就可以了。
Eclispe 有个插件叫ClassPathHelper 可以帮你找找所依赖的类。